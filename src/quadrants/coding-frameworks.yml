name: Languages & Frameworks
quadrant: 2
entries:
  - label: PHP
    description: >
      <a href="https://www.php.net/">PHP</a> is a widely-used server-side
      scripting language known for its simplicity and flexibility in web
      development.

      We are using PHP because it offers robust community support, extensive
      libraries, and seamless integration with various databases. It is our
      primary language for backend development.
    ring: adopt
    active: true
    moved: 0
  - label: Symfony
    description: >
      The <a href="https://symfony.com/">Symfony</a> PHP framework is a
      well-organized, feature-rich PHP framework whose architecture paves the
      way for developers to build sustainable web applications in the easiest
      way possible which further enhances the users' experience.

      It is widely used in our organization and our developers have a lot of
      experience solving business problems with it. When writing a backend in
      PHP, consider using Symfony.
    ring: trial
    active: true
    moved: 0
  - label: TypeScript
    description: >
      <a href="https://www.typescriptlang.org/">TypeScript</a> is a
      strongly-typed  superset of JavaScript that adds static typing to the
      language, improving code  quality and maintainability.

      We are using TypeScript because it catches errors early in development,
      add the  ability to refactor code safely and enhances collaboration in
      large codebases.  It is our primary language when developing a UI and
      writing a backend with Node.js.
    ring: trial
    active: true
    moved: 0
  - label: JavaScript
    description: >
      <a
      href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">JavaScript
      (JS)</a> is a lightweight, interpreted, or just-in-time compiled
      programming language with first-class functions. JavaScript is a
      dynamically typed language, which means that types are checked, and data
      type errors are only detected at runtime, which leads to errors only show
      during production.

      JavaScript is only suited for small-scale applications. TypeScript should
      be favored over JavaScript. TypeScript code is more reliable and easier to
      refactor. This enables developers to evade errors and do rewrites much
      easier.

      We are no longer using JavaScript for new developments, and any time
      existing  JS code needs modification or updates, it’s important to
      consider refactoring  it to TypeScript.
    ring: adopt
    active: true
    moved: 0
  - label: jQuery
    description: >
      <a href="https://jquery.com/">jQuery</a> is a lightweight JavaScript
      library that simplifies HTML document manipulation, event handling, and
      animation with an easy-to-use API. It was widely popular for making
      cross-browser development easier, though its use has declined with the
      rise of modern frameworks like React.

      React has become our go-to choice for building UIs, particularly when
      paired with Marigold. We are not using jQuery for new developments, and
      whenever we modify, add, or change existing JavaScript code, it should be
      considered for refactoring to React.
    ring: onHold
    active: true
    moved: 0
  - label: React
    description: >
      <a href="https://react.dev/">React</a> is a popular JavaScript library for
      building user interfaces, known for its component-based architecture and
      efficient rendering. It supports reusable components, offers a streamlined
      development process, and has a large, comprehensive ecosystem that
      provides numerous tools and resources.

      React has become our go-to choice for building UIs, particularly when
      paired with Marigold. This combination enables us to develop our UIs more
      efficiently and consistently.
    ring: trial
    active: true
    moved: 0
  - label: Vue
    description: >
      <a href="https://vuejs.org/">Vue.js</a> is a progressive JavaScript
      framework for building user interfaces, designed with an approachable core
      and a focus on incrementally adaptable architecture. It offers features
      like two-way data binding and a component-based structure.

      While we use Vue.js in a few apps, we don't see any significant benefits
      over the more established React. To streamline our efforts and enhance
      developer experience, we focus on a single framework, opting to use React
      and Marigold for developing new features or apps.
    ring: onHold
    active: true
    moved: -1
  - label: Zend
    description: >
      <a href="https://framework.zend.com/">Zend Framework</a> is a collection
      of professional PHP packages. It can be used to develop web applications
      and services using PHP 5.6+, and provides 100% object-oriented code using
      a broad spectrum of language features.

      Our teams switched or are using Symfony to build our applications and thus
      the later should be preferred for projects.
    ring: trial
    active: true
    moved: 0
  - label: Next.js
    description: >
      <a href="https://nextjs.org/">Next.js</a> is a robust React framework
      designed  to enhance web application performance and developer
      productivity. It offers features such as server-side rendering, static
      site generation, and API routes, which improve performance, SEO, and
      scalability.

      After assessing it in multiple projects, including those in the financial
      domain  and for documentation, we feel confident moving it to “trial.”
      Teams interested in  adopting Next.js should contact their area architect
      for guidance.
    ring: trial
    active: true
    moved: 0
  - label: GraphQL
    description: >
      There are many successful <a
      href="https://github.com/facebook/graphql">GraphQL</a> implementations in
      our projects. That said, we've concerns about misuse of this framework and
      some of the problems that can occur. Examples include performance gotchas
      around N+1 queries and lots of boilerplate code needed when adding new
      models, leading to complexity. There are workarounds to these gotchas such
      as query caching.

      TODO
    ring: onHold
    active: true
    moved: 1
  - label: astro.build
    description: >
      <a href="https://astro.build/">Astro</a> is a new static site generator
      that aims to provide a faster, more efficient way to build modern websites
      by combining the best parts of static and dynamic web development. It
      offers a flexible architecture, supports modern web technologies, and
      provides a seamless developer experience.

      We are currently evaluating Astro for its potential to improve our
      development process and enhance the performance of our websites. Teams
      interested in using Astro should consult with their area architect for
      guidance.
    ring: adopt
    active: true
    moved: 0
